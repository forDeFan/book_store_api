version: "3.5"

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  bookstore_network:
    name: bookstore_network
    driver: bridge

services:

  app:
    env_file:
      - ./.env # To pass constants from .env during build
    build:
      context: .
      dockerfile: build/Dockerfile.api
    container_name: api
    restart: always
    # To close local port for api and rely on nginx only
    expose:
      - 8000
    volumes:
      - ./app:/app # To get mirroring of container dirs to local folder/ two way relation
      - static_volume:/app/static # nginx serving
      - media_volume:/app/media # nginx serving
    depends_on:
      - db
    networks:
      - bookstore_network

  db:
    env_file:
      - ./.env # To pass constants from .env during build
    build:
      context: .
      dockerfile: build/Dockerfile.db
    container_name: database
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    # Fetch from .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - bookstore_network

  nginx:
    container_name: nginx_proxy
    build:
      context: nginx
      dockerfile: ../build/Dockerfile.nginx # Because of context
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - app
    networks:
      - bookstore_network
