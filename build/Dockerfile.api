FROM python:3.9-alpine3.13

ENV PYTHONUNBUFFERED 1

COPY ./build/requirements.txt /tmp/requirements.txt
COPY ./app /app
WORKDIR /app

# Make dirs in order to avoid permission error from collecstatic
RUN mkdir $WORKDIR/static && \
    mkdir $WORKDIR/static/admin && \
    mkdir $WORKDIR/static/rest_framework

# Create virtual env inside container with low privileged user
RUN python -m venv /py && \
    /py/bin/pip install --upgrade pip && \
    apk add --update --no-cache postgresql-client && \
    apk add --update --no-cache --virtual .tmp-build-deps \
    build-base postgresql-dev musl-dev && \
    /py/bin/pip install -r /tmp/requirements.txt --use-pep517 && \
    rm -rf /tmp && \
    apk del .tmp-build-deps && \
    adduser \
    --disabled-password \
    --no-create-home \
    low_privilege_user

ENV PATH="/py/bin:$PATH"

# Provide the user with write privilege to app folder - for collectstatic
RUN chown -R low_privilege_user /app

# Run collectstatic
RUN python3 manage.py collectstatic --noinput

USER low_privilege_user

# Start Django.
# In production mode disable create_superuser and create_regular_user
CMD sh -c "python manage.py wait_for_database \
    && python manage.py migrate --noinput \
    && python manage.py create_superuser \
    && python manage.py create_regular_user \
    && python manage.py collectstatic --no-input \
    && gunicorn bookstore.wsgi:application --bind 0.0.0.0:8000"
